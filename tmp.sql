

CREATE TABLE QRTZ_EXECUTE_CFG
(
  SCHED_NAME      VARCHAR(120) NOT NULL,
  TRIGGER_NAME    VARCHAR(200) NOT NULL,
  TRIGGER_TYPE   VARCHAR(8)  NOT NULL,
  CRON_EXPRESSION VARCHAR(120),
  TIME_ZONE_ID    VARCHAR(80),

  REPEAT_COUNT    BIGINT,
  REPEAT_INTERVAL BIGINT,
  TIMES_TRIGGERED BIGINT,
  PRIMARY KEY (SCHED_NAME, TRIGGER_NAME,TRIGGER_TYPE),
  FOREIGN KEY (SCHED_NAME, TRIGGER_NAME,TRIGGER_TYPE)
  REFERENCES QRTZ_JOB_CFG (SCHED_NAME, TRIGGER_NAME,TRIGGER_TYPE)
);

 COMMENT ON TABLE QRTZ_EXECUTE_CFG IS '存放CRON/SIMPLE类型的Trigger';
 COMMENT ON COLUMN QRTZ_EXECUTE_CFG.SCHED_NAME IS '调度名称(应用名称)';
 COMMENT ON COLUMN QRTZ_EXECUTE_CFG.TRIGGER_NAME IS '触发器的名称，qrtz_triggers表的TRIGGER_NAME的外键';
 COMMENT ON COLUMN QRTZ_EXECUTE_CFG.TRIGGER_TYPE IS '执行时间类型(CRON/SIMPLE)';
 COMMENT ON COLUMN QRTZ_EXECUTE_CFG.CRON_EXPRESSION IS 'CRON:cron表达式';
 COMMENT ON COLUMN QRTZ_EXECUTE_CFG.TIME_ZONE_ID IS 'CRON:时区';
 COMMENT ON COLUMN QRTZ_EXECUTE_CFG.REPEAT_COUNT IS 'SIMPLE:重复次数';
 COMMENT ON COLUMN QRTZ_EXECUTE_CFG.REPEAT_INTERVAL IS 'SIMPLE:执行间隔';
 COMMENT ON COLUMN QRTZ_EXECUTE_CFG.TIMES_TRIGGERED IS 'SIMPLE:触发时间';
 INSERT INTO QRTZ_EXECUTE_CFG (SCHED_NAME,TRIGGER_NAME,TRIGGER_TYPE,REPEAT_COUNT,REPEAT_INTERVAL,TIMES_TRIGGERED) VALUES
 	 ('MEE_QUARTZ','SimpleJob::SIMPLE','SIMPLE',1001,30000,10),
 	 ('MEE_QUARTZ','SimpleJob::SIMPLE_TEST','SIMPLE',1001,30000,10),
 	 ('MEE_QUARTZ','CTestJob::SIMPLE','SIMPLE',1001,30000,10),
 	 ('MEE_QUARTZ','ATestJob::SIMPLE','SIMPLE',1000,30000,-1);
 INSERT INTO QRTZ_EXECUTE_CFG (sched_name,trigger_name,TRIGGER_TYPE,cron_expression,time_zone_id) VALUES
   ('QUARTZ-SPRINGBOOT','Job01TestService::execute','CRON','0 * * * * ?','Asia/Shanghai'),
   ('MEE_QUARTZ2','QRTZ_AUTO_CHECK_JOB','CRON','0 */2 * ? * *','Asia/Shanghai'),
   ('MEE_QUARTZ','QRTZ_AUTO_CHECK_JOB','CRON','0 */2 * ? * *','Asia/Shanghai');

-- 13. 合并 QRTZ_TRIGGERS & QRTZ_JOB_DETAILS
CREATE TABLE QRTZ_JOB_CFG(
  SCHED_NAME     VARCHAR(120) NOT NULL,
  TRIGGER_NAME   VARCHAR(200) NOT NULL,
  TRIGGER_TYPE   VARCHAR(8)   NOT NULL,
  TRIGGER_STATE  VARCHAR(16)  NOT NULL,
  DESCRIPTION    VARCHAR(250) NULL,
  NEXT_FIRE_TIME BIGINT       NULL,
  PREV_FIRE_TIME BIGINT       NULL,
  PRIORITY       INTEGER      NULL,
  START_TIME     BIGINT       NOT NULL,
  END_TIME       BIGINT       NULL,
  CALENDAR_NAME  VARCHAR(200) NULL,
  MISFIRE_INSTR  SMALLINT     NULL,
  -- JOB_DATA       BYTEA        NULL,

  JOB_CLASS_NAME    VARCHAR(250) NOT NULL,
  -- IS_DURABLE        BOOL         NOT NULL,
  IS_NONCONCURRENT  BOOL         NOT NULL,
  IS_UPDATE_DATA    BOOL         NOT NULL,
  REQUESTS_RECOVERY BOOL         NOT NULL,
  JOB_DATA          BYTEA        NULL,
  PRIMARY KEY (SCHED_NAME, TRIGGER_NAME,TRIGGER_TYPE)
);


-- CREATE INDEX IDX_QRTZ_JC_J ON QRTZ_JOB_CFG (SCHED_NAME, TRIGGER_NAME);
CREATE INDEX IDX_QRTZ_JC_C ON QRTZ_JOB_CFG (SCHED_NAME, CALENDAR_NAME);
-- CREATE INDEX IDX_QRTZ_JC_G ON QRTZ_JOB_CFG (SCHED_NAME);
-- CREATE INDEX IDX_QRTZ_JC_STATE ON QRTZ_JOB_CFG (SCHED_NAME, TRIGGER_STATE);
CREATE INDEX IDX_QRTZ_JC_N_STATE ON QRTZ_JOB_CFG (SCHED_NAME, TRIGGER_NAME,TRIGGER_TYPE, TRIGGER_STATE);
CREATE INDEX IDX_QRTZ_JC_NEXT_FIRE_TIME ON QRTZ_JOB_CFG (SCHED_NAME, NEXT_FIRE_TIME);
CREATE INDEX IDX_QRTZ_JC_NFT_ST ON QRTZ_JOB_CFG (SCHED_NAME, TRIGGER_STATE, NEXT_FIRE_TIME);
-- CREATE INDEX IDX_QRTZ_JC_NFT_MISFIRE ON QRTZ_JOB_CFG (SCHED_NAME, MISFIRE_INSTR, NEXT_FIRE_TIME);
CREATE INDEX IDX_QRTZ_JC_NFT_ST_MISFIRE ON QRTZ_JOB_CFG (SCHED_NAME, MISFIRE_INSTR, NEXT_FIRE_TIME, TRIGGER_STATE);
CREATE INDEX IDX_QRTZ_JC_REQ_RECOVERY ON QRTZ_JOB_CFG (SCHED_NAME, REQUESTS_RECOVERY);

-- QRTZ_TRIGGERS
COMMENT ON TABLE QRTZ_JOB_CFG IS '合并QRTZ_TRIGGERS & QRTZ_JOB_DETAILS';
COMMENT ON COLUMN QRTZ_JOB_CFG.SCHED_NAME IS '调度名称';
COMMENT ON COLUMN QRTZ_JOB_CFG.TRIGGER_NAME IS '触发器的名称,关联qrtz_job_details';
COMMENT ON COLUMN QRTZ_JOB_CFG.DESCRIPTION IS '详细描述信息';
COMMENT ON COLUMN QRTZ_JOB_CFG.NEXT_FIRE_TIME IS '下一次触发时间（毫秒），默认为-1，意味不会自动触发';
COMMENT ON COLUMN QRTZ_JOB_CFG.PREV_FIRE_TIME IS '上一次触发时间（毫秒）';
COMMENT ON COLUMN QRTZ_JOB_CFG.PRIORITY IS '优先级';
COMMENT ON COLUMN QRTZ_JOB_CFG.TRIGGER_STATE IS '当前触发器状态（ WAITING：等待； PAUSED：暂停； ACQUIRED：正常执行； BLOCKED：阻塞； ERROR：错误；）';
COMMENT ON COLUMN QRTZ_JOB_CFG.TRIGGER_TYPE IS '触发器的类型，使用cron表达式';
COMMENT ON COLUMN QRTZ_JOB_CFG.START_TIME IS '开始时间';
COMMENT ON COLUMN QRTZ_JOB_CFG.END_TIME IS '结束时间';
COMMENT ON COLUMN QRTZ_JOB_CFG.CALENDAR_NAME IS '日程表名称，表qrtz_calendars的CALENDAR_NAME字段的值';
COMMENT ON COLUMN QRTZ_JOB_CFG.MISFIRE_INSTR IS '措施或者是补偿执行的策略';
COMMENT ON COLUMN QRTZ_JOB_CFG.JOB_CLASS_NAME IS 'DETAILS:集群中job实现类的全名，quartz就是根据这个路径到classpath找到该job类';
-- COMMENT ON COLUMN QRTZ_JOB_CFG.IS_DURABLE IS 'DETAILS:是否持久化，把该属性设置为1，quartz会把job持久化到数据库中';
COMMENT ON COLUMN QRTZ_JOB_CFG.IS_NONCONCURRENT IS 'DETAILS:是否并发执行';
COMMENT ON COLUMN QRTZ_JOB_CFG.IS_UPDATE_DATA IS 'DETAILS:是否更新数据';
COMMENT ON COLUMN QRTZ_JOB_CFG.REQUESTS_RECOVERY IS 'DETAILS:是否接受恢复执行，默认为false，设置了RequestsRecovery为true，则该job会被重新执行';
COMMENT ON COLUMN QRTZ_JOB_CFG.JOB_DATA IS 'DETAILS:一个blob字段，存放持久化job对象';


INSERT INTO QRTZ_EXECUTE_CFG (SCHED_NAME,TRIGGER_NAME,TRIGGER_TYPE,CRON_EXPRESSION,TIME_ZONE_ID,REPEAT_COUNT,REPEAT_INTERVAL,TIMES_TRIGGERED) VALUES (?,?,?,?,?,?,?,?)


INSERT INTO QRTZ_JOB_CFG(
SCHED_NAME,TRIGGER_NAME,TRIGGER_TYPE,TRIGGER_STATE,DESCRIPTION,NEXT_FIRE_TIME,PREV_FIRE_TIME,PRIORITY,START_TIME,END_TIME,CALENDAR_NAME,MISFIRE_INSTR,JOB_CLASS_NAME,IS_NONCONCURRENT,IS_UPDATE_DATA,REQUESTS_RECOVERY,JOB_DATA
) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)


